<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.henu.mapper.BorrowMapper">

    <select id="listByCondition" resultType="com.henu.entity.Borrow">
        select * from borrow
        <where>
            <if test="bookName !=null and bookName !=''">
                book_name like concat('%',#{bookName},'%')
            </if>
            <if test="bookNo !=null and bookNo !=''">
                and book_no =#{bookNo}
            </if>
            <if test="userName !=null and userName !=''">
                and user_name like concat('%',#{userName},'%')
            </if>
        </where>
        order by id desc
    </select>



    <select id="listReturnByCondition" resultType="com.henu.entity.Retur">
        select * from retur
        <where>
            <if test="bookName !=null and bookName !=''">
                book_name like concat('%',#{bookName},'%')
            </if>
            <if test="bookNo !=null and bookNo !=''">
                and book_no =#{bookNo}
            </if>
            <if test="userName !=null and userName !=''">
                and user_name like concat('%',#{userName},'%')
            </if>
        </where>
        order by id desc
    </select>
    <insert id="saveReturn">
        insert into retur(book_name,book_no,user_no,user_name,user_phone,score,days,return_date,real_date)
        values(#{bookName},#{bookNo},#{userNo},#{userName},#{userPhone},#{score},#{days},#{returnDate},#{realDate})
    </insert>


    <insert id="save">
        insert into borrow(book_name,book_no,user_no,user_name,user_phone,score,days,return_date)
        values(#{bookName},#{bookNo},#{userNo},#{userName},#{userPhone},#{score},#{days},#{returnDate})
    </insert>
    <update id="update">
        update borrow set book_name=#{bookName},book_no=#{bookNo},
        user_no= #{userNo},user_name=#{userName},user_phone=#{userPhone},
        score= #{score} updatetime=#{updatetime} ,
        days=#{days},return_date=#{returnDate}where id=#{id}
    </update>
    <update id="updateStatus">
        update borrow set status=#{status}where id=#{id}
    </update>
    <delete id="deleteById">
        delete from borrow where id=#{id}
    </delete>
    <delete id="deleteReturnById">
        delete from retur where id=#{id}
    </delete>
    <select id="list" resultType="com.henu.entity.Borrow">
        select * from borrow order by id desc
    </select>
    <select id="getById" resultType="com.henu.entity.Borrow">
        select *from borrow where id=#{id}
    </select>
    <select id="getByUsername" resultType="com.henu.entity.Borrow">
        select * from borrow where name=#{name}
    </select>
    <select id="getCountByTimeRange" resultType="com.henu.mapper.po.BorrowReturCountPO">
        select count(id) as count, DATE_FORMAT(createtime,'%Y-%m-%d') as date from
        <if test="type == 1">
            borrow
        </if>
        <if test="type == 2">
            retur
        </if>
        where
        <choose>
            <when test="timeRange == 'week'">
                createtime >=  DATE_SUB(NOW(),INTERVAL 1 WEEK)   --  DATE_SUB  就是数据库进行时间计算的函数
            </when>
            <when test="timeRange == 'month'">
                createtime >=  DATE_SUB(NOW(),INTERVAL 1 MONTH)
            </when>
            <when test="timeRange == 'month2'">
                createtime >=  DATE_SUB(NOW(),INTERVAL 2 MONTH)
            </when>
            <when test="timeRange == 'month3'">
                createtime >=  DATE_SUB(NOW(),INTERVAL 3 MONTH)
            </when>
            <otherwise>
                createtime > now()
            </otherwise>
        </choose>
        group by date
    </select>


</mapper>